#Упражнение 1
def print_map(function, iterable):
    i = iter(iterable)
    while i < iterable:
        print(function(next(i))) 
        
#Упражнение 2
def fibonacci(n):
    fib1, fib2 = 0, 1
    for i in range(n):
        fib1, fib2 = fib2, fib1 + fib2
        yield fib1

n = int(input())
for fib in fibonacci(n):
    print(fib, end=' ')
print()

for fib in fibonacci(10):
    print(fib, end=' ')
print()

for fib in fibonacci(20):
    print(fib, end=' ')
print()


#Упражнение 3
def map1(a, iterable):
    for i in iterable:
        yield a(i)

def enumerate1(iterable, s = 0):
    for i in iterable:
        yield s, i
        s += 1

def zip1(*vals):
    n = len(vals[0])
    for i in range(n):
        arr = []
        for p in vals:
            arr.append(p[i])
        yield list(arr) 
        
        
#Задача 2
mport itertools


def get_permutations(s, n):
    return list(itertools.permutations(s, n)) 
    
#Задача 3
import itertools


def get_combinations(s, k):
    m = []
    for i in range(1, k+1):
        m.append(list(itertools.combinations(s, i)))
    return m
    
    
#Задача 4

import itertools


def get_combinations_with_r(s, n):
    return list(itertools.combinations_with_replacement(s, n)) 
    
#Задача 5
import itertools


def compress_string(s):
    m = []
    for key, value in itertools.groupby(s):
        m.append((len(list(value)), key))
    return m
    
#Задача 6
rom itertools import starmap, product


def function(*args):
    s = 0
    for i in args:
        s += i ** 2
    return s


def maximize(lists, m):
    max = 0
    for item in starmap(function, list(product(*lists))):
        if item % m > max:
            max = item % m
    return max


lists = [
    [5, 4],
    [7, 8, 9],
    [5, 7, 8, 9, 10]
]
print(maximize(lists, 1000))
